// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Register.Infrastructure.Context;

#nullable disable

namespace Register.Infrastructure.Migrations
{
    [DbContext(typeof(RegisterApiContext))]
    [Migration("20230828205246_FirstMigration")]
    partial class FirstMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.21")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Register.Domain.Addressing", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<int>("WarehouseId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("WarehouseId");

                    b.ToTable("Addressings");
                });

            modelBuilder.Entity("Register.Domain.InventoryMovement", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("ImportDate")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("InventoryId")
                        .HasColumnType("int");

                    b.Property<string>("ItemId")
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)");

                    b.Property<DateTime>("MovementDate")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("MovementeType")
                        .HasColumnType("int");

                    b.Property<int>("WarehouseId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ItemId");

                    b.HasIndex("WarehouseId");

                    b.ToTable("InventoryMovements");
                });

            modelBuilder.Entity("Register.Domain.Item", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("Observation")
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)");

                    b.Property<int>("UnitOfMeasurement")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Items");
                });

            modelBuilder.Entity("Register.Domain.ItemsAddressing", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("AddressingId")
                        .HasColumnType("int");

                    b.Property<string>("ItemId")
                        .HasColumnType("varchar(150)");

                    b.Property<decimal>("Quantity")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("AddressingId");

                    b.HasIndex("ItemId");

                    b.ToTable("ItemsAddressings");
                });

            modelBuilder.Entity("Register.Domain.Warehouse", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Warehouses");
                });

            modelBuilder.Entity("Register.Domain.Addressing", b =>
                {
                    b.HasOne("Register.Domain.Warehouse", "Warehouse")
                        .WithMany("Addressings")
                        .HasForeignKey("WarehouseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Warehouse");
                });

            modelBuilder.Entity("Register.Domain.InventoryMovement", b =>
                {
                    b.HasOne("Register.Domain.Item", "Item")
                        .WithMany("InventoryMovement")
                        .HasForeignKey("ItemId");

                    b.HasOne("Register.Domain.Warehouse", "Warehouse")
                        .WithMany()
                        .HasForeignKey("WarehouseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Item");

                    b.Navigation("Warehouse");
                });

            modelBuilder.Entity("Register.Domain.ItemsAddressing", b =>
                {
                    b.HasOne("Register.Domain.Addressing", "Addressing")
                        .WithMany("Item")
                        .HasForeignKey("AddressingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Register.Domain.Item", "Item")
                        .WithMany("Addressings")
                        .HasForeignKey("ItemId");

                    b.Navigation("Addressing");

                    b.Navigation("Item");
                });

            modelBuilder.Entity("Register.Domain.Addressing", b =>
                {
                    b.Navigation("Item");
                });

            modelBuilder.Entity("Register.Domain.Item", b =>
                {
                    b.Navigation("Addressings");

                    b.Navigation("InventoryMovement");
                });

            modelBuilder.Entity("Register.Domain.Warehouse", b =>
                {
                    b.Navigation("Addressings");
                });
#pragma warning restore 612, 618
        }
    }
}
